// Generated by view binder compiler. Do not edit!
package com.example.qctestingapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.Chronometer;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.qctestingapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityQuestionsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnNext;

  @NonNull
  public final ImageButton btnScanQr;

  @NonNull
  public final Chronometer fullTimer;

  @NonNull
  public final LinearLayout fulltimelayout;

  @NonNull
  public final LinearLayout layoutQuestions;

  @NonNull
  public final LinearLayout parttimeLayout;

  @NonNull
  public final Chronometer timer;

  @NonNull
  public final TextView txtQr;

  private ActivityQuestionsBinding(@NonNull ScrollView rootView, @NonNull Button btnNext,
      @NonNull ImageButton btnScanQr, @NonNull Chronometer fullTimer,
      @NonNull LinearLayout fulltimelayout, @NonNull LinearLayout layoutQuestions,
      @NonNull LinearLayout parttimeLayout, @NonNull Chronometer timer, @NonNull TextView txtQr) {
    this.rootView = rootView;
    this.btnNext = btnNext;
    this.btnScanQr = btnScanQr;
    this.fullTimer = fullTimer;
    this.fulltimelayout = fulltimelayout;
    this.layoutQuestions = layoutQuestions;
    this.parttimeLayout = parttimeLayout;
    this.timer = timer;
    this.txtQr = txtQr;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityQuestionsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityQuestionsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_questions, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityQuestionsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnNext;
      Button btnNext = rootView.findViewById(id);
      if (btnNext == null) {
        break missingId;
      }

      id = R.id.btn_scan_qr;
      ImageButton btnScanQr = rootView.findViewById(id);
      if (btnScanQr == null) {
        break missingId;
      }

      id = R.id.fullTimer;
      Chronometer fullTimer = rootView.findViewById(id);
      if (fullTimer == null) {
        break missingId;
      }

      id = R.id.fulltimelayout;
      LinearLayout fulltimelayout = rootView.findViewById(id);
      if (fulltimelayout == null) {
        break missingId;
      }

      id = R.id.layoutQuestions;
      LinearLayout layoutQuestions = rootView.findViewById(id);
      if (layoutQuestions == null) {
        break missingId;
      }

      id = R.id.parttimeLayout;
      LinearLayout parttimeLayout = rootView.findViewById(id);
      if (parttimeLayout == null) {
        break missingId;
      }

      id = R.id.timer;
      Chronometer timer = rootView.findViewById(id);
      if (timer == null) {
        break missingId;
      }

      id = R.id.txt_qr;
      TextView txtQr = rootView.findViewById(id);
      if (txtQr == null) {
        break missingId;
      }

      return new ActivityQuestionsBinding((ScrollView) rootView, btnNext, btnScanQr, fullTimer,
          fulltimelayout, layoutQuestions, parttimeLayout, timer, txtQr);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
